# -*- coding: utf-8 -*-
"""rainfall-prediction-using-linear-regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_WTA2ybAOrTIdIO1pWuAXTxVIAaLpO5i
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import metrics
from sklearn.svm import SVC
from xgboost import XGBClassifier
from sklearn.linear_model import LogisticRegression
from imblearn.over_sampling import RandomOverSampler

import warnings
warnings.filterwarnings('ignore')

data=pd.read_csv('/content/rainfall in india 1901-2015.csv')
data.head()

data.info()

data.dropna(inplace=True)

data.isnull().sum()

data.head()

telangana = data.loc[data['SUBDIVISION'] == 'TELANGANA']
x = telangana['YEAR']
x.drop(columns=['YEAR'])
y = telangana['ANNUAL']
y.head()

x.shape, y.shape

import matplotlib.pyplot as plt

plt.scatter(x, y)
plt.plot()

"""After reshaping the 'x' and 'y' variables to match the expected input shape for the LinearRegression model, the code fits the LinearRegression model to the data. It calculates the intercept and coefficient of the regression line."""

from sklearn.linear_model import LinearRegression
model = LinearRegression()
#x.head()
x = np.array(x).reshape(-1, 1)
y = np.array(y).reshape(-1, 1)
model.fit(x, y)

"""The code visualizes the scatter plot of the 'x' and 'y' data points and overlays the regression line on the plot."""

b = model.intercept_

m = model.coef_

plt.scatter(x, y)
plt.scatter(x, m*x+b)
plt.plot()



